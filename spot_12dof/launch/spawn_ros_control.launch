<launch>
    <!-- load the urdf -->
     <param name='robot_description' textfile='$(find spot_12dof)/urdf/solo12.urdf' />


    <!-- launch Gazebo world in paused-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name='use_sim_time' value='true'/>
        <arg name='debug' value='false'/>
        <arg name='gui' value='true'/>
        <arg name='paused' value='true'/>
    </include>
      
    
    <!-- set originnal position -->
    <arg name='x' default='0'/>
    <arg name='y' default='0'/>
    <arg name='z' default='0'/>
  
    <!-- associate to the robot description parameter, the urdf file that model -->
    <!-- spawn the robot using packgage ros-->
    <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-file $(find spot_12dof)/urdf/solo12.urdf -urdf -model spot_12dof" output="screen" />
    <node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true" />
  
    <!-- load the controllers -->
    <rosparam command="load" file="$(find spot_12dof)/config/joints_controllers.yaml"/>
    
    <!-- load the node controller manager -->
    <group ns="/spot_12dof">
        <node name="controller_manager" pkg="controller_manager" type="controller_manager" output="screen"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen"
                args="joint_state_controller 
                fl_abduction_joint_position_controller
                fl_hip_joint_position_controller
                fl_knee_joint_position_controller
                hl_abduction_joint_position_controller
                hl_hip_joint_position_controller
                hl_knee_joint_position_controller
                fr_abduction_joint_position_controller
                fr_hip_joint_position_controller
                fr_knee_joint_position_controller
                hr_abduction_joint_position_controller
                hr_hip_joint_position_controller
                hr_knee_joint_position_controller
                --timeout 60"/>
    </group>

    <!-- convert joint states to TF transform for rviz and rqt -->
    <node name='robot_state_publisher' pkg='robot_state_publisher' type='robot_state_publisher'
            output='screen' respawn='false'>
            <remap from="/joint_states" to="/spot_12dof/joint_states"/>
    </node>
    <!-- <node name='rqt_reconfigure' pkg='rqt_gui' type='rqt_gui'/> -->
    <!-- <node name='robot_controller' pkg = 'spot_12dof' type= 'walking.py' output='screen'/> -->
  </launch>